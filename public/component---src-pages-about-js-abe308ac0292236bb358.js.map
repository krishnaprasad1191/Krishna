{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/utils/social-links.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","About","_ref","data","document","body","classList","add","about","allMarkdownRemark","edges","filter","edge","node","frontmatter","title","minutes","Math","ceil","wordCount","words","a","createElement","keywords","className","src","imageOne","childImageSharp","fluid","alt","dangerouslySetInnerHTML","__html","html","m","module","exports","require","default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","json","propTypes","shape","socialLinks","linkType","username","socialLink","Header","react_default","id","href","gatsby_browser_entry","to","map","link","i","key","target","Footer","Layout","children","Fragment","header","footer","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf"],"mappings":"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","file":"component---src-pages-about-js-abe308ac0292236bb358.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { graphql} from 'gatsby';\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst About = ( { data } ) => {\n  document.body.classList.add('show-content');\n  \n  const about = data.allMarkdownRemark.edges.filter(edge => edge.node.frontmatter.title === 'About');\n  \n  const minutes = Math.ceil( about[0].node.wordCount.words / 200 ) \n\n  return (\n    <Layout>\n    <SEO title=\"About\" keywords={[`gatsby`, `application`, `react`, `portfolio`, `personal website`, `blog`]}/>\n\n      {/* About Page */}\n      <div className=\"about sml-wrapper\">\n        <div className=\"about__sec\">\n          <div className=\"about__head-sec\">\n            <h2 className=\"about__head\">\n              About Me\n            </h2>\n            <p className=\"about__time\"> { minutes } { minutes > 1 ? 'minutes' : 'minute'  }  read </p>\n          </div>\n          <img src={ data.imageOne.childImageSharp.fluid.src } alt=\"Praveen Kumar Saini\" className=\"about__author-img\"/>\n        </div>\n        <p className=\"about__content content\" dangerouslySetInnerHTML={\n          {\n            __html: about[0].node.html\n          }\n        }>\n        </p>\n      </div> \n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    imageOne: file(relativePath: {eq: \"me.jpg\"}) {\n      childImageSharp {\n        fluid {\n          src\n          originalImg\n          originalName\n        }\n      }\n    }\n    allMarkdownRemark {\n      edges {\n        node {\n          html\n          wordCount {\n            words\n          }\n          frontmatter{\n            title\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default About;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","const socialLinks = [\n  {\n    linkType: 'twitter',\n    username: 'am_pra_veen',\n    socialLink: 'https://twitter.com/', \n  },\n  {\n    linkType: 'github',\n    username: 'praveen-me',\n    socialLink: 'https://github.com/'\n  },\n  {\n    linkType: 'linkedin',\n    username: 'praveen-me',\n    socialLink: 'https://linkedin.com/in/'\n  },\n];\n\nexport default socialLinks;","import { Link } from \"gatsby\";\nimport React from \"react\";\n\nimport socialLinks from \"../utils/social-links\";\n\nconst Header = () => (\n  <header className=\"header\" id=\"top\">\n    <a href=\"#top\" className=\"header__topbar\"></a>\n    <div className=\"header__content-block\">\n      <div className=\"header__logo-sec\">\n        <Link to=\"/\" className=\"header__logo\">JS</Link>\n      </div>\n      <div className=\"header__social-pack\">\n        {\n          socialLinks.map( ( link, i ) => (\n            <div className=\"header__social-sec\" key={ link.linkType }>\n              <span> { link.linkType } </span> \n              <a href={link.socialLink + link.username } target=\"_blank\"> @{ link.username }</a>\n            </div>\n          ) )\n        }        \n      </div>\n    </div>\n  </header>\n);\n\nexport default Header\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__text center\">\n      Made with ❤️ JavaScript and SASS with React and Gatsby 💻\n      </p> \n    </footer>\n  )\n};\n\nexport default Footer;","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\";\nimport Header from \"./header\";\nimport Footer from \"./footer\";\n\nconst Layout = ({ children }) => {\n\n  return (\n    <>\n      <Header/>\n      <main className=\"wrapper main\">{children}</main>\n      <Footer/>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}